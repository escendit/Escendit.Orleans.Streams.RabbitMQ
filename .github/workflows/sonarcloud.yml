name: sonar
on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened]
  release:
    types:
      - published
jobs:
  build:
    name: Build and analyze
    runs-on: windows-latest
    if: github.repository_owner == 'escendit'
    steps:
      - name: Install GitVersion
        uses: gittools/actions/gitversion/setup@v0
        with:
          versionSpec: '5.x'
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: 'zulu'
      - name: Setup .NET Core SDK 7, 8
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: |
            7.0.x
            8.0.x
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Determine Version
        uses: gittools/actions/gitversion/execute@v0
        with:
          useConfigFile: true
      - name: Cache SonarCloud packages
        uses: actions/cache@v3
        with:
          path: ~\sonar\cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Cache SonarCloud scanner
        id: cache-sonar-scanner
        uses: actions/cache@v3
        with:
          path: .\.sonar\scanner
          key: ${{ runner.os }}-sonar-scanner
          restore-keys: ${{ runner.os }}-sonar-scanner
      - name: Install SonarCloud scanner
        if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
        shell: powershell
        run: |
          New-Item -Path .\.sonar\scanner -ItemType Directory
          dotnet tool update dotnet-sonarscanner --tool-path .\.sonar\scanner
      - name: Build and analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        if: ${{ env.SONAR_TOKEN != null }}
        shell: powershell
        run: |
          .\.sonar\scanner\dotnet-sonarscanner begin `
            /k:"escendit_rabbitmq-orleans-extensions" `
            /o:"escendit" `
            /v:${{ env.GitVersion_FullSemVer }} `
            /d:sonar.token="${{ secrets.SONAR_TOKEN }}" `
            /d:sonar.host.url="https://sonarcloud.io" `
            /d:sonar.cs.vstest.reportsPaths=**/TestResults/*.trx `
            /d:sonar.cs.opencover.reportsPaths=**/TestResults/*/coverage.opencover.xml `
            /d:sonar.coverage.exclusions="**Test*.cs"
          dotnet build --configuration Release
          dotnet test `
            --configuration Release `
            --no-build `
            --filter="Category=UnitTest|Category=IntegrationTest" `
            --collect "XPlat Code Coverage" `
            --results-directory TestResults/ `
            --logger "trx;LogFilePrefix=test-results" `
            -- DataCollectionRunSettings.DataCollectors.DataCollector.Configuration.Format=opencover
          .\.sonar\scanner\dotnet-sonarscanner end /d:sonar.token="${{ secrets.SONAR_TOKEN }}"
