Escendit.Orleans.Streaming.RabbitMQ.StreamProtocol.Configuration.StreamOptions
Escendit.Orleans.Streaming.RabbitMQ.StreamProtocol.Configuration.StreamOptions.StreamOptions() -> void
Orleans.Hosting.ClientBuilderExtensions
Orleans.Hosting.SiloBuilderExtensions
static Orleans.Hosting.ClientBuilderExtensions.ConfigureStreamPubSub(this Escendit.Orleans.Streaming.RabbitMQ.Builder.IRabbitMqClientOptionsBuilder! clientBuilder, Orleans.Streams.StreamPubSubType streamPubSubType = Orleans.Streams.StreamPubSubType.ExplicitGrainBasedAndImplicit) -> Escendit.Orleans.Streaming.RabbitMQ.Builder.IRabbitMqClientOptionsBuilder!
static Orleans.Hosting.ClientBuilderExtensions.UseStreamProtocol(this Escendit.Orleans.Streaming.RabbitMQ.Builder.IRabbitMqClientProtocolBuilder! clientBuilder, System.Action<Escendit.Extensions.DependencyInjection.RabbitMQ.Abstractions.ConnectionOptions!>! configureOptions) -> Escendit.Orleans.Streaming.RabbitMQ.Builder.IRabbitMqClientOptionsBuilder!
static Orleans.Hosting.SiloBuilderExtensions.ConfigureStreamPubSub(this Escendit.Orleans.Streaming.RabbitMQ.Builder.IRabbitMqSiloOptionsBuilder! siloBuilder, Orleans.Streams.StreamPubSubType streamPubSubType = Orleans.Streams.StreamPubSubType.ExplicitGrainBasedAndImplicit) -> Escendit.Orleans.Streaming.RabbitMQ.Builder.IRabbitMqSiloOptionsBuilder!
static Orleans.Hosting.SiloBuilderExtensions.UseStreamProtocol(this Escendit.Orleans.Streaming.RabbitMQ.Builder.IRabbitMqSiloProtocolBuilder! siloBuilder, System.Action<Escendit.Extensions.DependencyInjection.RabbitMQ.Abstractions.ConnectionOptions!>! configureOptions) -> Escendit.Orleans.Streaming.RabbitMQ.Builder.IRabbitMqSiloOptionsBuilder!